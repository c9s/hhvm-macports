# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=portfile:et:sw=4:ts=4:sts=4
# $Id$
PortSystem          1.0
PortGroup           cmake 1.0

name                hhvm
version             3.2.0
maintainers         c9s
categories          lang
license             ZEND
description         HHVM is an open-source virtual machine designed for executing programs written in Hack and PHP. HHVM uses a just-in-time (JIT) compilation approach to achieve superior performance while maintaining the flexibility that PHP developers are accustomed to. http://hhvm.com
long_description    ${name}: ${description}

platforms           darwin

fetch.type          git
git.url             git://github.com/facebook/hhvm.git
# git.branch          HHVM-${version}
git.branch          origin/HHVM-${version}

post-fetch {
    # Does the github portgroup support 'clone --recursive'?
    # This will be removed once the python re-write is complete.
    system -W ${worksrcpath} "git submodule update --init"
}

depends_build-append port:autoconf port:cmake port:automake port:gcc48 port:binutils

depends_lib         port:oniguruma5 port:libvpx \
                    port:libelf port:tbb port:libevent \
                    port:libxslt port:mysql55-connector-cpp \
                    port:elftoolchain port:google-glog port:libzip \
                    port:protobuf-c port:protobuf-cpp port:ncurses port:pcre

use_parallel_build  yes

# configure.compiler  apple-gcc-4.2
# -DCMAKE_CXX_COMPILER=${prefix}/bin/g++-mp-4.8
# -DCMAKE_C_COMPILER=${prefix}/bin/gcc-mp-4.8
configure.compiler      macports-gcc-4.8
configure.args-append \
        -Wno-dev \
        -DCMAKE_ASM_COMPILER=${configure.cc} \
        -DLIBIBERTY_LIB=${prefix}/lib/gcc48/x86_64/libiberty.a \
        -DCMAKE_INCLUDE_PATH="${prefix}/include/gcc48/c++/parallel:${prefix}/include:/usr/include" \
        -DCMAKE_LIBRARY_PATH="${prefix}/lib:/usr/lib" \
        -DLIBDWARF_LIBRARIES=${prefix}/lib/elftoolchain/libdwarf.3.dylib \
        -DLIBDWARF_INCLUDE_DIRS=${prefix}/include/elftoolchain \
        -DLIBEVENT_LIB=${prefix}/lib/libevent.dylib \
        -DLIBEVENT_INCLUDE_DIR=${prefix}/include \
        -DLIBVPX_INCLUDE_DIRS=${prefix}/include \
        -DFREETYPE_INCLUDE_DIRS=${prefix}/include/freetype2 \
        -DFREETYPE_LIBRARIES=${prefix}/lib/libfreetype.dylib \
        -DLIBSQLITE3_INCLUDE_DIR=${prefix}/include \
        -DLIBSQLITE3_LIBRARY=${prefix}/lib/libsqlite3.0.dylib \
        -DJEMALLOC_INCLUDE_DIR=${prefix}/include \
        -DJEMALLOC_LIB=${prefix}/lib/libjemalloc.dylib \
        -DMYSQL_INCLUDE_DIR=${prefix}/include/mysql55/mysql \
        -DMYSQL_LIB=${prefix}/lib/mysql55/mysql/libmysqlclient.dylib \
        -DBOOST_INCLUDEDIR=${prefix}/include \
        -DBOOST_LIBRARYDIR=${prefix}/lib \
        -DBoost_USE_STATIC_LIBS=ON \
        -DPCRE_INCLUDE_DIR=${prefix}/include \
        -DPCRE_LIBRARY=${prefix}/lib/libpcre.dylib \
        -DREADLINE_INCLUDE_DIR=${prefix}/include \
        -DREADLINE_LIBRARY=${prefix}/lib/libreadline.dylib \
        -DCURL_INCLUDE_DIR=${prefix}/include \
        -DCURL_LIBRARY=${prefix}/lib/libcurl.dylib
        
    # distfiles
    # startupitem.create      yes
    # startupitem.executable  ${prefix}/lib/${name_mysql}/bin/mysqld --user=${mysqluser}
    #
    # destroot {
    #     xinstall -m 755 -o root -d \
    #         ${destroot}${prefix}/var/run
    #     xinstall -m 755 -o ${mysqluser} -g ${mysqluser} -d \
    #         ${destroot}${prefix}/etc/${name_mysql} \
    #         ${destroot}${prefix}/var/db/${name_mysql} \
    #         ${destroot}${prefix}/var/log/${name_mysql} \
    #         ${destroot}${prefix}/var/run/${name_mysql}
    #     destroot.keepdirs-append  \
    #         ${destroot}${prefix}/var/db/${name_mysql} \
    #         ${destroot}${prefix}/var/log/${name_mysql} \
    #         ${destroot}${prefix}/var/run/${name_mysql}
    # }

#    patch.pre_args      -p1
#    patchfiles          patch-cmake-install_layout.cmake.diff

# configure.args-append -DINFODIR=share/info -DDOCDIR=share/doc
# build {}
# destroot { }
